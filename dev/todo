┏━━━━━━━━━━━━━━━━━━┓
┃ Standard Library ┃
┗━━━━━━━━━━━━━━━━━━┛

  ➤ General

[] Do I really need errno? Maybe use callback functions? Decide on this.
[✓] Write the interface for reading and writing to and from serial ports.

  ➤ ctype.h

[✓] isprint()
[✓] iscntrl()
[✓] isgraph()
[✓] isxdigit()
[✓] isblank()
[✓] ispunct()

  ➤ string.h

[✓] Fix [strtoi] so it works with negative numbers.
[✓] strcpy()
[✓] strncpy()
[✓] strcmp()
[] strncmp()
[] strcat()
[] strncat()
[✓] strstr()
[] strrchr()
[] strtok()
[✓] strspn()

  ➤ stdio.h

[✓] Implement [printf] with [_fspec].
[✓] Restore the holy field width padding (for [printf]).
[✓] Add hex, octal and binary support to [printf].
[✓] Add pointer support to [printf].
[✓] Replace [printf] with [vprintf] and write [printf] as a wrapper function for [vprintf].
[✓] Write a [printf] function that accepts a character-printer function.
[✓] Steal the printf implementation from that GitHub repo.


┏━━━━━━━━┓
┃ Kernel ┃
┗━━━━━━━━┛

  ➤ General

[] Write a stivale tag parser and keep the info somewhere.
[✓] Move action-info-printing functions away from the function that handles the actions indirectly.
[] Give limine more tags.
[] Move [print_splash_info] into a higher level init function and call that from kernel_start.
[] Write an interface for getting the stivale info (after it's been parsed).
[] Give limine a frambuffer header tag.
[] Read the stivale2 documentation for the memory map structure tag.
[] Decide on structure of the kernel directory.
[✓] Load IDT table and write some IRQ handlers.
[✓] Handle keyboard interrupts properly.
[✓] Learn how to set up the GDT and do it.
[✓] Clean up integer types in the functions that load the IDT.
[✓] Fix the IDT.
[✓] Find out what key does each keyboard interrupt represent.
[✓] Map keycodes to ascii characters.
[✓] Enable Shift and Caps Lock.
[] Interface with keyboard at the kernel level.
    [] Write another layer of abstraction (0_0) between [sendKey] and [getchar].
    [] Implement [getchar] using state machine information.
    [] Should the state machine contain a buffer of characters until linked lists can be implemented?
[] Write basic shell.
    [] Have a fixed buffer of characters for commands until dynamic memory allocation is a thing.
    [] Decide on command format. UNIX-style?

  ➤ Memory

[] bruh


  ➤ Debugging

[✓] Function that logs info about kernel stuff.
[✓] Write interface for logging to QEMU's 0xE9 port.
[] Write interface for logging various debug messages separately from kernel-related logs.
[] Learn how to connect GDB to QEMU.
[✓] Rewrite [klog_info] so that the status parameter is first and the rest is VA_ARGS for vprintf


┏━━━━━━━━━━━━━┓
┃ Development ┃
┗━━━━━━━━━━━━━┛

  ➤ Code Style

[] Decide on pointer binding direction (and actually use it).
[✓] Replace fixed width integer types with normal integer types (for better portability).
[✓] Decide on tabs/spaces.
[] Don't destroy input parameters.
[] Consistent naming convention for kernel-related enumerations.
[] Consistent naming convention for libc implementations.
[] Replace tabs with spaces.
[] Put #include <cdefs.h> and extern "C" in all headers.
[] Decide on header inclusion order.
[] Decide on hex case.
[] Decide on whether or not parameter names show up in header files.

  ➤ Design

[] Find a good diagram drawing program.
[] Maybe draw some diagrams with bindings between files.
[] Minimize the I/O interface that is exposed to the kernel.c file.

  ➤ Structure

[] Move non-standard header files away from the root of the include folder.
[] Review kernel folder structure. Move headers into proper folders.


┏━━━━━━━━━━━━━━━┓
┃ Documentation ┃
┗━━━━━━━━━━━━━━━┛

  ➤ General

[] Create documentation directory structure.
[] Decide on documentation format.